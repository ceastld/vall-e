#!/usr/bin/env bash

# fix segmentation fault reported in https://github.com/k2-fsa/icefall/issues/674
export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

set -eou pipefail

nj=16
stage=0
stop_stage=3

# We assume dl_dir (download dir) contains the following
# directories and files. If not, they will be downloaded
# by this script automatically.
#
#  - $dl_dir/WenetSpeech
#      You can find audio, WenetSpeech.json inside it.
#      You can apply for the download credentials by following
#      https://github.com/wenet-e2e/WenetSpeech#download

dl_dir=$PWD/download

audio_extractor="Encodec"  # or Fbank
audio_feats_dir=data/tokenized
. shared/parse_options.sh || exit 1

# All files generated by this script are saved in "data".
# You can safely remove "data" and rerun this script to regenerate it.
mkdir -p data

log() {
    # This function is from espnet
    local fname=${BASH_SOURCE[1]##*/}
    echo -e "$(date '+%Y-%m-%d %H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}

if [ $stage -le 0 ] && [ $stop_stage -ge 0]; then
    log "dl_dir: $dl_dir"
    log "Stage 0: Download data"
    if [ ! -d $dl_dir/WenetSpeech ]; then
        log "Stage 0: You should download WenetSpeech first"
        exit 1;
    fi
fi

if [ $stage -le 1 ] && [ $stop_stage -ge 1 ]; then
    log "Stage 1: Prepare WenetSpeech manifest"
    mkdir -p data/manifests
    if [ ! -e data/manifest/.wenetspeech.done ]; then
        lhotse prepare wenet-speech $dl_dir/WenetSpeech data/manifests -j $nj
    fi
fi

if [ $stage -le 3 ] && [ $stop_stage -ge 3 ]; then
    log "Stage 3: Preprocess WenetSpeech manifest"
    if [ ! -f data/fbank/.preprocess_complete ]; then
        python3 ./ASR/local/preprocess_wenetspeech.py
        touch data/fbank/.preprocess_complete
    fi
fi

# if [ $stage -le 2 ] && [ $stop_stage -ge 2 ]; then
#     log "Stage 2: Tokenize/Fbank WenetSpeech"
#     mkdir -p ${audio_feats_dir}
#     if [ ! -e ${audio_feats_dir}/.wenetspeech.tokenize.done ]; then
#         python3 bin/tokenizer.py --dataset-parts "" \
#         --prefix "wenetspeech" \
#         --audio-extractor ${audio_extractor} \
#         --batch-duration ?? \
#         --src-dir "data/manifests" \
#         --output-dir "${audio_feats_dir}"
#     fi
# fi